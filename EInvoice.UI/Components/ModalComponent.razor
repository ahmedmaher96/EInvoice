@if (IsVisible)
{
    <div class="modal-backdrop fade show"></div>
}
<div class="modal fade @ModalClass" tabindex="-1" style="display: @(IsVisible ? "block" : "none");" role="dialog" aria-labelledby="simpleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="simpleModalLabel">@Title</h5>
                <button type="button" class="btn-close" @onclick="CloseModal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-2">
                @ChildContent
            </div>
            <div class="modal-footer">
                <a type="button" class="btn btn-secondary" @onclick="CloseModal">Close</a>
                <a type="button" class="btn btn-success" @onclick="Confirm">Add Item</a>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] 
    public bool IsVisible { get; set; }
    [Parameter] 
    public string Title { get; set; } = "Modal Title";

    [Parameter] 
    public EventCallback<bool> OnClose { get; set; }
    
    [Parameter] 
    public RenderFragment ChildContent { get; set; }

    private string ModalClass => IsVisible ? "show" : "";

    private async Task CloseModal()
    {
        IsVisible = false;
        await OnClose.InvokeAsync(false);
    }

    private async Task Confirm()
    {
        IsVisible = false;
        await OnClose.InvokeAsync(true);
    }
}
