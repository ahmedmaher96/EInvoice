@page "/Invoice/Form"
@page "/Invoice/Form/{InvoiceID:int?}"
@inject HttpClient Http
@inject GeneralService service

<h3>Invoice Form</h3>

<EditForm Model="@_invoice" OnValidSubmit="SendData">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="row">
        <div class="col-lg-4 border-end border-1 border-dark">
            <div class="my-3">
                <InputText @bind-Value="_invoice.Code" class="form-control" placeholder="Invoice Code" />
            </div>
            <div class="my-3">
                <select @bind="_invoice.Type" class="form-select">
                    <option value="0">Select Type</option>
                    @foreach (var type in Enum.GetValues(typeof(InvoiceType)))
                    {
                        <option value="@((int)type)">@type.ToString()</option>
                    }
                </select>
            </div>

            <div class="my-3">
                <InputText @bind-value="_invoice.DateTimeInssured" class="form-control" placeholder="Invoice Inssued Date" />
            </div>

        </div>


        <div class="col-lg-8" style="height: 70vh;">
            <div class="text-end mb-3">
                <button class="btn btn-success bi-file-earmark-plus-fill"> Add Items</button>
            </div>
            <div class="container my-2 py-2 overflow-auto" style="background-color: #F9F4F8; height: 100%;">
                @if (InvoiceID == null)
                {
                    <div class="text-center">
                        <h4 class="fw-bold h2">Add Items</h4>
                    </div>
                }
                else
                {
                    <div class="row">
                        <div class="well col-lg-12">
                            <div class="row">
                                <div class="col-xs-8 col-sm-8 col-md-8">
                                    <h4>
                                        <div class="w-25">
                                            <img src="CodeZone.jpg" style="width:100%;" alt="Alternate Text" />
                                        </div>
                                    </h4>
                                </div>
                                <div class="col-xs-4 col-sm-4 col-md-4 text-right">
                                    <p>
                                        <em>Date: @_invoice.DateTimeInssured.ToString("dd/MMMM/yyyy")</em>
                                    </p>
                                </div>
                            </div>
                            <div class="row">
                                <div class="text-center">
                                    @if (_invoice.Code != null)
                                    {
                                        <h4>@_invoice.Code</h4>
                                    }
                                    else
                                    {
                                        <h4>Invoice</h4>
                                    }
                                </div>
                                <table class="table recieptbg">
                                    <thead>
                                        <tr>
                                            <th>Product</th>
                                            <th>Quantity</th>
                                            <th class="text-center">Price</th>
                                            <th class="text-center">Total</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var invoiceItem in _invoice.InvoiceItems)
                                        {
                                            <tr>
                                                <td class="col-md-9"><p><em>InvoiceItem.Item</em></p></td>
                                                <td class="col-md-1" style="text-align: center"> InvoiceItem.Quantity </td>
                                                <td class="col-md-1 text-center">$8</td>
                                                <td class="col-md-1 text-center">$8</td>
                                            </tr>
                                        }
                                        <tr>
                                            <td colspan="2">
                                                <button>
                                                    Edit
                                                </button>
                                                <button>
                                                    Delete
                                                </button>
                                            </td>
                                            <td colspan="2">
                                            </td>
                                        </tr>
                                        <tr class="border-top border-black">
                                            <td>   </td>
                                            <td>   </td>
                                            <td class="text-right"><h4><strong>Total: </strong></h4></td>
                                            <td class="text-center text-danger"><h4><strong>$31.53</strong></h4></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>

                    </div>
                }
            </div>
        </div>
    </div>
    <div class="text-start">
        <button type="submit" class="btn btn-success">
            <i class="bi bi-file-earmark-plus-fill"></i> Save
        </button>
        <button class="btn btn-info">
            <i class="bi bi-printer-fill"></i> Print
        </button>
        <NavLink href="/Invoice" class="btn btn-secondary">
            <i class="bi bi-arrow-return-right"></i> Back
        </NavLink>
    </div>
</EditForm>

@code {

    private InvoiceDTO _invoice = new InvoiceDTO();
    private List<InvoiceItemDTO> _invoiceItems = new List<InvoiceItemDTO>();

    [Parameter]
    public int? InvoiceID { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        if (InvoiceID.HasValue)
        {
            _invoice = new InvoiceDTO();
            _invoice = await Http.GetFromJsonAsync<InvoiceDTO>($"api/Invoice/Form/{InvoiceID.Value}");
            _invoiceItems = _invoice.InvoiceItems.Select(item => new InvoiceItemDTO
                {
                    ItemID = item.ItemID,
                    InvoiceItemTaxes = item.InvoiceItemTaxes.Select(tax => new InvoiceItemTaxDTO
                    {
                        TaxId = tax.TaxId,
                        TaxAmount = tax.TaxAmount,
                    }).ToList(),
                    Quantity = item.Quantity,
                    Amount = item.Amount,
                }).ToList();
        }
        else
        {
            _invoice = new InvoiceDTO();
        }
        StateHasChanged();
    }


    private async Task SendData()
    {
        if (InvoiceID.HasValue)
        {
            await Update();
        }
        else
        {
            await Save();
        }
        StateHasChanged();
    }

    private async Task Save()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/Invoice/Form", _invoice);
            if (response.IsSuccessStatusCode)
            {
                var newInvoice = await response.Content.ReadFromJsonAsync<InvoiceDTO>();
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Error: {errorMessage}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error saving invoice: {ex.Message}");
        }
    }

    private async Task Update()
    {
        try
        {
            var response = await Http.PutAsJsonAsync($"api/Invoice/Form/{InvoiceID}", _invoice);
            if (response.IsSuccessStatusCode)
            {
                var newInvoice = await response.Content.ReadFromJsonAsync<InvoiceDTO>();
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Error: {errorMessage}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error saving invoice: {ex.Message}");
        }
    }

}
